{
	// Place your snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Functional component": {
		"scope": "typescript,typescriptreact",
		"prefix": "fc",
		"body": [
			"import React from 'react';",
			"",
			"interface Props {}",
			"",
			"const ${TM_FILENAME_BASE}: React.FC<Props> = (props) => (",
			"$0",
			");",
			"",
			"export default $TM_FILENAME_BASE;",
			"",
		]
	},

	"Functional component with body": {
		"scope": "typescript,typescriptreact",
		"prefix": "fcwb",
		"body": [
			"import React from 'react';",
			"",
			"interface Props {}",
			"",
			"const ${TM_FILENAME_BASE}: React.FC<Props> = (props) => {",
			"",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"};",
			"",
			"export default $TM_FILENAME_BASE;",
			"",
		]
	},

	"createStyles": {
		"scope": "typescript,typescriptreact",
		"prefix": "cs",
		"body": [
			"import { Theme } from '@material-ui/core';",
			"import { createStyles } from '@material-ui/core/styles';",
			"",
			"const styles = (theme: Theme) => createStyles({",
			"\tprop: {",
			"\t\t$0",
			"\t},",
			"});",
			"",
			"export default styles;",
			"",
		]
	},
}
